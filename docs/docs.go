// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hello"
                ],
                "summary": "Hello Page",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_route_handler.hello"
                        }
                    }
                }
            }
        },
        "/api/v1/login/native": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1",
                    "login"
                ],
                "summary": "Native login",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response",
                        "schema": {
                            "$ref": "#/definitions/v1.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_Template7_backend_internal_t7Error.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_Template7_backend_internal_t7Error.Code": {
            "type": "integer",
            "enum": [
                1024,
                1025,
                1026,
                1027,
                1028,
                1029,
                1030,
                1031,
                1032,
                1033,
                1034,
                1035,
                1036,
                1037,
                1038,
                1039,
                1040,
                1041,
                1042,
                1043,
                1044,
                1045
            ],
            "x-enum-varnames": [
                "codeUnAuthorized",
                "codeInvalidBody",
                "codeDbConnectionFail",
                "codeDbOperationFail",
                "codeInvalidDocumentId",
                "codeHttpOperationFail",
                "codeHttpUnexpectedResponseCode",
                "codeHashFail",
                "codeUserNotfound",
                "codeUserAlreadyExist",
                "codeSignInFail",
                "codeVerifyCodeExpired",
                "codeIncorrectVerifyCode",
                "codeRedisOperationFail",
                "codeTokenSignFail",
                "codeTokenAssertionFail",
                "codeInvalidToken",
                "codeDecodeFail",
                "codeWalletNotFound",
                "codePasswordIncorrect",
                "codeUserHasNoRole",
                "codeUnknown"
            ]
        },
        "github_com_Template7_backend_internal_t7Error.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_Template7_backend_internal_t7Error.Code"
                        }
                    ],
                    "example": 1024
                },
                "detail": {
                    "type": "string",
                    "example": "empty token"
                },
                "message": {
                    "type": "string",
                    "example": "token unauthorized"
                },
                "type": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_Template7_backend_internal_t7Error.Type"
                        }
                    ],
                    "example": 32
                }
            }
        },
        "github_com_Template7_backend_internal_t7Error.Type": {
            "type": "integer",
            "enum": [
                32,
                33,
                34,
                35,
                36,
                37
            ],
            "x-enum-varnames": [
                "typeAuth",
                "typeInvalidData",
                "typeDb",
                "typeRedis",
                "typeNetwork",
                "typeOther"
            ]
        },
        "internal_route_handler.hello": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Hello"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2021-07-24T20:01:25.874565+08:00"
                }
            }
        },
        "v1.LoginRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "description": "password",
                    "type": "string"
                },
                "username": {
                    "description": "username",
                    "type": "string"
                }
            }
        },
        "v1.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Backend API",
	Description:      "API Documentation",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
