definitions:
  handler.hello:
    properties:
      message:
        example: Hello
        type: string
      timestamp:
        example: "2021-07-24T20:01:25.874565+08:00"
        type: string
    type: object
  types.HttpCreateUserReq:
    properties:
      email:
        example: example@email.com
        type: string
      nickname:
        example: nickname
        type: string
      password:
        example: password
        type: string
      role:
        enum:
        - admin
        - operator
        - user
        example: user
        type: string
      username:
        example: username
        type: string
    required:
    - password
    - username
    type: object
  types.HttpCreateUserResp:
    properties:
      code:
        example: 3000
        type: integer
      data:
        $ref: '#/definitions/types.HttpCreateUserRespData'
      message:
        example: ok
        type: string
      requestId:
        example: b8974256-1f17-477f-8638-c7ebbac656d7
        type: string
    type: object
  types.HttpCreateUserRespData:
    properties:
      activationCode:
        example: 0b25b3a8-2e85-452b-8d54-527f7e68a875
        type: string
      userId:
        example: f47ac10b-58cc-0372-8567-0e02b2c3d479
        type: string
    type: object
  types.HttpGetUserWalletsResp:
    properties:
      code:
        example: 3000
        type: integer
      data:
        items:
          $ref: '#/definitions/types.HttpGetUserWalletsRespData'
        type: array
      message:
        example: ok
        type: string
      requestId:
        example: b8974256-1f17-477f-8638-c7ebbac656d7
        type: string
    type: object
  types.HttpGetUserWalletsRespData:
    properties:
      balances:
        items:
          $ref: '#/definitions/types.HttpGetUserWalletsRespDataBalance'
        type: array
      id:
        example: af68a360-d035-469c-8ae9-a8640c2ffd19
        type: string
    type: object
  types.HttpGetUserWalletsRespDataBalance:
    properties:
      amount:
        example: "100"
        type: string
      currency:
        example: usd
        type: string
    type: object
  types.HttpGetWalletBalanceHistoryData:
    properties:
      amount:
        example: "100"
        type: string
      balanceAfter:
        example: "110"
        type: string
      balanceBefore:
        example: "10"
        type: string
      currency:
        example: ntd
        type: string
      direction:
        description: one of deposit, withdraw, transferIn, transferOut
        example: deposit
        type: string
      note:
        type: string
      timestamp:
        type: integer
    type: object
  types.HttpGetWalletBalanceHistoryResp:
    properties:
      code:
        example: 3000
        type: integer
      data:
        items:
          $ref: '#/definitions/types.HttpGetWalletBalanceHistoryData'
        type: array
      message:
        example: ok
        type: string
      requestId:
        example: b8974256-1f17-477f-8638-c7ebbac656d7
        type: string
    type: object
  types.HttpGetWalletResp:
    properties:
      code:
        example: 3000
        type: integer
      data:
        $ref: '#/definitions/types.HttpGetUserWalletsRespData'
      message:
        example: ok
        type: string
      requestId:
        example: b8974256-1f17-477f-8638-c7ebbac656d7
        type: string
    type: object
  types.HttpLoginReq:
    properties:
      password:
        example: password
        type: string
      username:
        example: username
        type: string
    required:
    - password
    - username
    type: object
  types.HttpLoginResp:
    properties:
      code:
        example: 3000
        type: integer
      data:
        properties:
          token:
            example: 70596484-67d3-46bd-94bf-08f7c9fb7ac1
            type: string
        type: object
      message:
        example: ok
        type: string
      requestId:
        example: b8974256-1f17-477f-8638-c7ebbac656d7
        type: string
    type: object
  types.HttpRespBase:
    properties:
      code:
        example: 3000
        type: integer
      message:
        example: ok
        type: string
      requestId:
        example: b8974256-1f17-477f-8638-c7ebbac656d7
        type: string
    type: object
  types.HttpRespError:
    properties:
      code:
        example: 1024
        type: integer
      message:
        example: token unauthorized
        type: string
      requestId:
        example: 27c0a70e-59ab-4a94-872c-5f014aaa047f
        type: string
    type: object
  types.HttpTransferMoneyReq:
    properties:
      amount:
        example: 100
        type: integer
      currency:
        enum:
        - usd
        - ntd
        - cny
        - jpy
        example: usd
        type: string
      fromWalletId:
        example: 4eb4a439-af97-46e4-8a0c-6d568281c43a
        type: string
      note:
        type: string
      toWalletId:
        example: d53ce74f-5f74-4c78-b3ca-1e1d2f7fa43d
        type: string
    required:
    - amount
    - currency
    - fromWalletId
    - toWalletId
    type: object
  types.HttpUpdateUserInfoReq:
    properties:
      nickname:
        example: nickname
        type: string
    required:
    - nickname
    type: object
  types.HttpUserInfoResp:
    properties:
      code:
        example: 3000
        type: integer
      data:
        $ref: '#/definitions/types.HttpUserInfoRespData'
      message:
        example: ok
        type: string
      requestId:
        example: b8974256-1f17-477f-8638-c7ebbac656d7
        type: string
    type: object
  types.HttpUserInfoRespData:
    properties:
      email:
        example: example@email.com
        type: string
      nickname:
        example: example
        type: string
      role:
        example: user
        type: string
      status:
        example: activated
        type: string
      userId:
        example: userId001
        type: string
    type: object
  types.HttpWalletDepositReq:
    properties:
      amount:
        example: 100
        type: integer
      currency:
        enum:
        - usd
        - ntd
        - cny
        - jpy
        example: usd
        type: string
      note:
        type: string
    required:
    - amount
    - currency
    type: object
  types.HttpWalletWithdrawReq:
    properties:
      amount:
        example: 100
        type: integer
      currency:
        enum:
        - usd
        - ntd
        - cny
        - jpy
        example: usd
        type: string
      note:
        type: string
    required:
    - amount
    - currency
    type: object
info:
  contact: {}
  description: API Documentation
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Backend API
  version: "1.0"
paths:
  /:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.hello'
      summary: Hello Page
      tags:
      - Hello
  /admin/v1/user:
    post:
      parameters:
      - description: Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.HttpCreateUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: Response
          schema:
            $ref: '#/definitions/types.HttpCreateUserResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.HttpRespError'
      summary: Create user
      tags:
      - V1
      - User
  /admin/v1/users/{userId}:
    delete:
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Response
          schema:
            $ref: '#/definitions/types.HttpRespBase'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.HttpRespError'
      summary: Delete user
      tags:
      - V1
      - User
  /api/v1/login/native:
    post:
      parameters:
      - description: Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.HttpLoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: Response
          schema:
            $ref: '#/definitions/types.HttpLoginResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.HttpRespError'
      summary: Native login
      tags:
      - V1
      - Login
  /api/v1/transfer:
    post:
      parameters:
      - description: Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.HttpTransferMoneyReq'
      produces:
      - application/json
      responses:
        "200":
          description: Response
          schema:
            $ref: '#/definitions/types.HttpRespBase'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.HttpRespError'
      summary: Wallet transfer
      tags:
      - V1
      - Wallet
  /api/v1/user/info:
    get:
      responses:
        "200":
          description: Response
          schema:
            $ref: '#/definitions/types.HttpUserInfoResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.HttpRespError'
      summary: Get user Info
      tags:
      - V1
      - User
    put:
      parameters:
      - description: Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.HttpUpdateUserInfoReq'
      produces:
      - application/json
      responses:
        "200":
          description: Response
          schema:
            $ref: '#/definitions/types.HttpRespBase'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.HttpRespError'
      summary: Update user info
      tags:
      - V1
      - User
  /api/v1/user/wallets:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: Response
          schema:
            $ref: '#/definitions/types.HttpGetUserWalletsResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.HttpRespError'
      summary: Get user wallets
      tags:
      - V1
      - User
      - Wallet
  /api/v1/wallets/{walletId}:
    get:
      parameters:
      - description: Wallet ID
        in: path
        name: walletId
        required: true
        type: string
      responses:
        "200":
          description: Response
          schema:
            $ref: '#/definitions/types.HttpGetWalletResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.HttpRespError'
      summary: Get wallet
      tags:
      - V1
      - Wallet
  /api/v1/wallets/{walletId}/deposit:
    post:
      parameters:
      - description: Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.HttpWalletDepositReq'
      - description: Wallet ID
        in: path
        name: walletId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Response
          schema:
            $ref: '#/definitions/types.HttpRespBase'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.HttpRespError'
      summary: Wallet deposit
      tags:
      - V1
      - Wallet
  /api/v1/wallets/{walletId}/history:
    get:
      parameters:
      - description: Wallet ID
        in: path
        name: walletId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Response
          schema:
            $ref: '#/definitions/types.HttpGetWalletBalanceHistoryResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.HttpRespError'
      summary: Get wallet balance record
      tags:
      - V1
      - Wallet
  /api/v1/wallets/{walletId}/withdraw:
    post:
      parameters:
      - description: Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.HttpWalletWithdrawReq'
      - description: Wallet ID
        in: path
        name: walletId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Response
          schema:
            $ref: '#/definitions/types.HttpRespBase'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.HttpRespError'
      summary: Wallet withdraw
      tags:
      - V1
      - Wallet
swagger: "2.0"
